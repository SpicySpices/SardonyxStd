object List {
    fn range(x, y) {
        arr = []
        i = x
        while i < y {
            arr = arr + i
            i = i + 1
        }
        arr
    }
}
object Math {
    Pi = 3.141592653589793
    E = 2.718281828459045

    fn factorial(n) {
        x = 1
        while n > 0 {
            x = x * n
            n = n - 1
        }
        x
    }

    fn pow(x, y) {
        n = x
        for List:range(0, y) {
            n = n * x
        }
        n
    }

    fn sin(n) {
        x = 1
        n = n % Pi
        y = n
        for List:range(0, 8) {
            x = x + 2
            y = y - (pow(n, x) / factorial(x))
            x = x + 2
            y = y + (pow(n, x) / factorial(x))
        }
        x
    }

    fn cos(n) {
        sin(n + (Pi/4))
    }

    fn tan(n) {
        sin(n) / cos(n)
    }

    fn toRad(n) {
        n * Pi / 180
    }

    fn toDeg(n) {
        n * 180 / Pi
    }

    fn sign(n) {
        if n > 0 {
            1
        } else if n < 0 {
            -1
        }
        0
    }

    fn floor(n) {
        n - n % 1
    }

    fn ceil(n) {
        0 - floor(0 - n)
    }

    fn round(n) {
        if n % 1 > 0.5 {
            ceil(n)
        } else {
            floor(n)
        }
    }

    fn max(x, y) {
        if x > y {
            x
        }
        y
    }

    fn min(x, y) {
        0 - max(0 - x, 0 - y)
    }

    fn clamp(n, x, y) {
        min(max(n, x), y)
    }

    fn permutate(x, y) {
        factorial(x) / factorial(x - y)
    }

    fn combinate(x, y) {
        permutate(x, y) / factorial(y)
    }
}
